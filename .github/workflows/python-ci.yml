name: Python application CI/CD

permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [windows-latest]
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: python build.py

      - name: Zip everything inside dist for windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          mkdir releases
          cd dist
          Compress-Archive -Path * -DestinationPath ../releases/${{ runner.os }}-build.zip

      - name: Zip everything inside dist for macos and linux
        if: ${{ runner.os != 'Windows' }}
        run: |
          mkdir releases
          cd dist
          zip -r ../releases/${{ runner.os }}-build.zip *

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: releases/${{ runner.os }}-build.zip

  publish-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Automatic Semantic Versioning
        id: semver
        uses: paulhatch/semantic-version@v5.3.0
        with:
          branch: main
          tag_prefix: ""
          bump_each_commit: true

      - name: Set new tag
        run: git tag ${{ steps.semver.outputs.version }}

      - name: Push tag
        uses: ad-m/github-push-action@v0.8.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: releases/

      - name: Display structure of downloaded files
        run: ls -R ./

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.semver.outputs.version }}
          draft: false
          prerelease: false
          files: |
            ./releases/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup Artifacts
        uses: geekyeggo/delete-artifact@v3
        with:
          name: |
            Windows-build
            macOS-build
            Linux-build
